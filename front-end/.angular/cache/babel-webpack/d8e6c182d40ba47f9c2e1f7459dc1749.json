{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nexport let EventBusService = /*#__PURE__*/(() => {\n  class EventBusService {\n    constructor() {\n      this.subject = new Subject();\n    }\n\n    on(event, action) {\n      return this.subject.pipe(filter(e => {\n        return e.name === event;\n      }), map(e => {\n        return e.value;\n      })).subscribe(action);\n    }\n\n    emit(event) {\n      this.subject.next(event);\n    }\n\n  }\n\n  EventBusService.ɵfac = function EventBusService_Factory(t) {\n    return new (t || EventBusService)();\n  };\n\n  EventBusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventBusService,\n    factory: EventBusService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventBusService;\n})();\nexport class EmitEvent {\n  constructor(name, value) {\n    this.name = name;\n    this.value = value;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}