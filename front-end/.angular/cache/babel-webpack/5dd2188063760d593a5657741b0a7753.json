{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NgxNotificationStatusMsg } from 'ngx-notification-msg';\nimport { SelectQtdComponent } from '../../shared/select-qtd/select-qtd.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/native/native.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/core/event-bus/event-bus.service\";\nimport * as i4 from \"ngx-notification-msg\";\nimport * as i5 from \"../../shared/inventario/inventario.component\";\nimport * as i6 from \"../../shared/box-trade/box-trade.component\";\nimport * as i7 from \"@angular/common\";\n\nfunction TradeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelement(2, \"span\", 12);\n    i0.ɵɵelement(3, \"span\", 13);\n    i0.ɵɵelement(4, \"div\", 14);\n    i0.ɵɵelement(5, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    released: a0\n  };\n};\n\nexport let TradeComponent = /*#__PURE__*/(() => {\n  class TradeComponent {\n    constructor(nativeService, dialog, eventBus, ngxNotificationMsgService) {\n      var _a, _b, _c, _d;\n\n      this.nativeService = nativeService;\n      this.dialog = dialog;\n      this.eventBus = eventBus;\n      this.ngxNotificationMsgService = ngxNotificationMsgService;\n      this.subscribes = [];\n      this.eventsBus = [{\n        event: \"updateTrade\",\n        action: trade => {\n          this.trade = trade;\n        }\n      }, {\n        event: \"closeCancelTrade\",\n        action: () => {\n          var _a;\n\n          this.nativeService.sendData(\"closeCancelTrade\", {\n            key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n            ids: this.ids\n          });\n        }\n      }, {\n        event: \"closeTrade\",\n        action: sucs => {\n          if (sucs) {\n            this.statusTrade = true;\n            setTimeout(() => {\n              this.statusTrade = false;\n              this.nativeService.sendData(\"closeNui\", {\n                showNui: false\n              });\n            }, 1500);\n          } else {\n            this.nativeService.sendData(\"closeNui\", {\n              showNui: false\n            });\n          }\n        }\n      }];\n      this.trade = (_b = (_a = this.nativeService) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.trade;\n      this.ids = (_d = (_c = this.nativeService) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.ids;\n      this.ids = {\n        my: 1,\n        other: 2\n      };\n      this.trade = {\n        [1]: {\n          inventory: {\n            itensBag: [{\n              title: 'AK47',\n              img: \"http://localhost/inve/ak47.png\",\n              qtd: 1\n            }, {\n              title: 'Carregador Fuzil',\n              img: \"http://localhost/inve/attcarregador.png\",\n              qtd: 5\n            }, {\n              title: 'Café',\n              img: \"http://localhost/inve/cafe.png\",\n              qtd: 2\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }, {\n              null: true\n            }]\n          },\n          itensTrade: [{\n            title: 'AK47',\n            img: \"http://localhost/inve/ak47.png\",\n            qtd: 1\n          }, {\n            title: 'Carregador Fuzil',\n            img: \"http://localhost/inve/attcarregador.png\",\n            qtd: 5\n          }, {\n            title: 'Café',\n            img: \"http://localhost/inve/cafe.png\",\n            qtd: 2\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }],\n          moneyTrade: 0,\n          myMoney: 10000\n        },\n        [2]: {\n          itensTrade: [{\n            title: 'AK47',\n            img: \"http://localhost/inve/ak47.png\",\n            qtd: 1\n          }, {\n            title: 'Carregador Fuzil',\n            img: \"http://localhost/inve/attcarregador.png\",\n            qtd: 5\n          }, {\n            title: 'Café',\n            img: \"http://localhost/inve/cafe.png\",\n            qtd: 2\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }, {\n            null: true\n          }],\n          moneyTrade: 0,\n          myMoney: 5000\n        },\n        ready: true\n      };\n    }\n\n    ngOnInit() {\n      this.eventsBus.forEach(event => {\n        this.subscribes.push(this.eventBus.on(event.event, data => {\n          event.action(data);\n        }));\n      });\n    }\n\n    ngOnDestroy() {\n      this.subscribes.map(x => {\n        x.unsubscribe();\n      });\n    }\n\n    itemAddTrade(data) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, function* () {\n        let checkWeigthInInventoryOther = function (trade, ids, qtd, ngxNotificationMsgService) {\n          var _a;\n\n          let otherTrade = trade[ids.other];\n          let itemWeigth = ((_a = data.event) === null || _a === void 0 ? void 0 : _a.weight) * qtd;\n\n          if ((otherTrade === null || otherTrade === void 0 ? void 0 : otherTrade.maxWeigthInventory) < itemWeigth + (otherTrade === null || otherTrade === void 0 ? void 0 : otherTrade.weigthInventory)) {\n            ngxNotificationMsgService.open({\n              status: NgxNotificationStatusMsg.INFO,\n              header: 'Aviso',\n              messages: [\"Sem espaço na mochila do destinatário para este item\"],\n              closeable: false,\n              delay: 5000\n            });\n            return false;\n          }\n\n          return true;\n        };\n\n        if (data.event.qtd == 1) {\n          if (checkWeigthInInventoryOther(this.trade, this.ids, 1, this.ngxNotificationMsgService)) {\n            data.event.qtd = 1;\n            this.nativeService.sendData(\"addItemTrade\", {\n              key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n              ids: this.ids,\n              item: data.event\n            }).then(callback => {\n              this.trade = JSON.parse(callback);\n            });\n          }\n\n          return;\n        }\n\n        const dialogRef = this.dialog.open(SelectQtdComponent, {\n          height: \"34rem\",\n          width: \"22rem\",\n          data: data.event\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          var _a;\n\n          let qtd = result;\n\n          if (qtd) {\n            if (checkWeigthInInventoryOther(this.trade, this.ids, qtd, this.ngxNotificationMsgService)) {\n              data.event.qtd = qtd;\n              this.nativeService.sendData(\"addItemTrade\", {\n                key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n                ids: this.ids,\n                item: data.event\n              }).then(callback => {\n                this.trade = JSON.parse(callback);\n              });\n            }\n\n            return;\n          }\n        });\n      });\n    }\n\n    checkTrade(trade) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, function* () {\n        this.nativeService.sendData(\"readyTrade\", {\n          key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n          ids: this.ids,\n          confirm: trade === null || trade === void 0 ? void 0 : trade.ready\n        }).then(callback => {\n          this.trade = JSON.parse(callback);\n        });\n        return;\n      });\n    }\n\n    confirmTrade(confirmStatus) {\n      var _a, _b;\n\n      return __awaiter(this, void 0, void 0, function* () {\n        this.trade[this.ids.my].confirm = confirmStatus;\n\n        if (!confirmStatus) {\n          this.nativeService.sendData(\"closeCancelTrade\", {\n            key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n            ids: this.ids\n          });\n          return;\n        }\n\n        this.nativeService.sendData(\"confirmTrade\", {\n          key: (_b = this.trade) === null || _b === void 0 ? void 0 : _b.key,\n          ids: this.ids,\n          confirm: confirmStatus\n        }).then(callback => {\n          this.trade = JSON.parse(callback);\n        });\n        return;\n      });\n    }\n\n    updateMoneyTrade(data) {\n      var _a;\n\n      this.nativeService.sendData(\"setMoneyTrade\", {\n        key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n        ids: this.ids,\n        money: data.money.target.value\n      }).then(callback => {\n        this.trade = JSON.parse(callback);\n      });\n      return;\n    }\n\n    itemRemoveTrade(data) {\n      var _a;\n\n      this.nativeService.sendData(\"removeItemTrade\", {\n        key: (_a = this.trade) === null || _a === void 0 ? void 0 : _a.key,\n        ids: this.ids,\n        item: data.item\n      }).then(callback => {\n        this.trade = JSON.parse(callback);\n      });\n      return;\n    }\n\n  }\n\n  TradeComponent.ɵfac = function TradeComponent_Factory(t) {\n    return new (t || TradeComponent)(i0.ɵɵdirectiveInject(i1.NativeService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.EventBusService), i0.ɵɵdirectiveInject(i4.NgxNotificationMsgService));\n  };\n\n  TradeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TradeComponent,\n    selectors: [[\"app-trade\"]],\n    decls: 12,\n    vars: 14,\n    consts: [[1, \"trade\"], [1, \"blur\"], [3, \"equippeds\", \"itensEquippeds\", \"itensBag\", \"itemClickEvent\"], [1, \"box-trades\"], [3, \"title\", \"trade\", \"allTrade\", \"moneyChange\", \"checkClickEvent\", \"itemClickEvent\"], [3, \"title\", \"trade\", \"allTrade\", \"showReady\"], [1, \"buttons\", 3, \"ngClass\"], [1, \"check\", 3, \"click\"], [1, \"uncheck\", 3, \"click\"], [\"class\", \"success-checkmark\", 4, \"ngIf\"], [1, \"success-checkmark\"], [1, \"check-icon\"], [1, \"icon-line\", \"line-tip\"], [1, \"icon-line\", \"line-long\"], [1, \"icon-circle\"], [1, \"icon-fix\"]],\n    template: function TradeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"inventario\", 2);\n        i0.ɵɵlistener(\"itemClickEvent\", function TradeComponent_Template_inventario_itemClickEvent_2_listener($event) {\n          return ctx.itemAddTrade($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"box-trade\", 4);\n        i0.ɵɵlistener(\"moneyChange\", function TradeComponent_Template_box_trade_moneyChange_4_listener($event) {\n          return ctx.updateMoneyTrade($event);\n        })(\"checkClickEvent\", function TradeComponent_Template_box_trade_checkClickEvent_4_listener($event) {\n          return ctx.checkTrade($event);\n        })(\"itemClickEvent\", function TradeComponent_Template_box_trade_itemClickEvent_4_listener($event) {\n          return ctx.itemRemoveTrade($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"box-trade\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function TradeComponent_Template_button_click_7_listener() {\n          return ctx.confirmTrade(true);\n        });\n        i0.ɵɵtext(8, \"Confirmar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function TradeComponent_Template_button_click_9_listener() {\n          return ctx.confirmTrade(false);\n        });\n        i0.ɵɵtext(10, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, TradeComponent_div_11_Template, 6, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"equippeds\", false)(\"itensEquippeds\", ctx.trade[ctx.ids.my].inventory.itensEquippeds)(\"itensBag\", ctx.trade[ctx.ids.my].inventory.itensBag);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"title\", \"Minhas ofertas\")(\"trade\", ctx.trade[ctx.ids.my])(\"allTrade\", ctx.trade);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", \"Oferecidos\")(\"trade\", ctx.trade[ctx.ids.other])(\"allTrade\", ctx.trade)(\"showReady\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.trade.ready));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.statusTrade);\n      }\n    },\n    directives: [i5.InventarioComponent, i6.BoxTradeComponent, i7.NgClass, i7.NgIf],\n    styles: [\".trade[_ngcontent-%COMP%]{height:100vh;width:100vw;display:flex;align-items:center;justify-content:center}.trade[_ngcontent-%COMP%]   .blur[_ngcontent-%COMP%]{height:100vh;width:100vw;position:absolute;background:#06073d;background:linear-gradient(90deg,rgba(6,7,61,.8) 0%,rgba(5,4,52,.6) 25%,rgba(2,0,36,.4) 50%,rgba(5,5,54,.6) 75%,rgba(6,7,61,.8) 100%);z-index:-1}.box-trades[_ngcontent-%COMP%]{height:100%;width:100%;padding:0 1rem}.box-trades[_ngcontent-%COMP%]     box-trade:nth-child(2) .bg{margin:1rem 0!important}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]{display:flex;height:5rem;width:50rem;justify-content:center;opacity:.35}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{pointer-events:none;width:50%;border-radius:.25rem;border:0;outline:none;color:#fff!important;transform:all .5s}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button.check[_ngcontent-%COMP%]{background:yellowgreen;margin-right:1.5rem}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button.check[_ngcontent-%COMP%]:hover{background:#769e24}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button.uncheck[_ngcontent-%COMP%]{background:#9c0a0a}.box-trades[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button.uncheck[_ngcontent-%COMP%]:hover{background:#7c0909}.box-trades[_ngcontent-%COMP%]   .buttons.released[_ngcontent-%COMP%]{pointer-events:unset;opacity:1}.success-checkmark[_ngcontent-%COMP%]{margin:0 auto;background:#ffffffaf;padding:2rem;border-radius:.5rem;position:absolute;transform:translate(-50%,-50%);top:50%;left:50%}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]{width:80px;height:80px;position:relative;border-radius:50%;box-sizing:content-box;border:4px solid #4caf50}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]:before{top:3px;left:-2px;width:30px;transform-origin:100% 50%;border-radius:100px 0 0 100px}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]:after{top:0;left:30px;width:60px;transform-origin:0 50%;border-radius:0 100px 100px 0;-webkit-animation:rotate-circle 4.25s ease-in;animation:rotate-circle 4.25s ease-in}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]:before, .success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]:after{content:\\\"\\\";height:100px;position:absolute;transform:rotate(-45deg)}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]   .icon-line[_ngcontent-%COMP%]{height:5px;background-color:#4caf50;display:block;border-radius:2px;position:absolute;z-index:10}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]   .icon-line.line-tip[_ngcontent-%COMP%]{top:46px;left:14px;width:25px;transform:rotate(45deg);-webkit-animation:icon-line-tip .75s;animation:icon-line-tip .75s}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]   .icon-line.line-long[_ngcontent-%COMP%]{top:38px;right:8px;width:47px;transform:rotate(-45deg);-webkit-animation:icon-line-long .75s;animation:icon-line-long .75s}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]   .icon-circle[_ngcontent-%COMP%]{top:-4px;left:-4px;z-index:10;width:80px;height:80px;border-radius:50%;position:absolute;box-sizing:content-box;border:4px solid rgba(76,175,80,.5)}.success-checkmark[_ngcontent-%COMP%]   .check-icon[_ngcontent-%COMP%]   .icon-fix[_ngcontent-%COMP%]{top:8px;width:5px;left:26px;z-index:1;height:85px;position:absolute;transform:rotate(-45deg)}@-webkit-keyframes rotate-circle{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}to{transform:rotate(-405deg)}}@keyframes rotate-circle{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}to{transform:rotate(-405deg)}}@-webkit-keyframes icon-line-tip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes icon-line-tip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes icon-line-long{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0px;top:35px}to{width:47px;right:8px;top:38px}}@keyframes icon-line-long{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0px;top:35px}to{width:47px;right:8px;top:38px}}\"]\n  });\n  return TradeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}